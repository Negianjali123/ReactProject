{"ast":null,"code":"var _jsxFileName = \"/home/anegi/react/frontend/src/Component/Provider/UserProvider.js\",\n  _s = $RefreshSig$();\n// UserProvider.js\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport UserContext from \"../context/UserContext\";\nimport { Cookies } from 'react-cookie'; // ✅ CORRECT\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const location = useLocation();\n  const [encryptedName, setEncryptedName] = useState(() => {\n    return localStorage.getItem(\"user\") || \"\";\n  });\n\n  // ✅ Load usernav from localStorage when the app first loads\n  // useEffect(() => {\n\n  //   console.log(\"UserProvider loaded user from localStorage:\", storedUser);\n  //   if (storedUser) {\n\n  //   }\n  // }, []);\n\n  // ✅ Sync usernav with localStorage when it changes\n  useEffect(() => {\n    console.log(\"path is:\", location.pathname);\n    if (encryptedName) {\n      console.log(\"Storing user in localStorage chala:\", encryptedName);\n      localStorage.setItem(\"user\", encryptedName);\n      const storedUser = localStorage.getItem(\"user\");\n      if (storedUser) {\n        setEncryptedName(storedUser);\n      }\n    } else {\n      console.log(\"removing user in localStorage chala:\", encryptedName);\n      localStorage.removeItem(\"user\");\n    }\n  }, [encryptedName]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      encryptedName,\n      setEncryptedName\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"7DsTMJKXxhv78mROFjgW8/W6thc=\", false, function () {\n  return [useLocation];\n});\n_c = UserProvider;\nexport default UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["useState","useEffect","useLocation","UserContext","Cookies","jsxDEV","_jsxDEV","UserProvider","children","_s","location","encryptedName","setEncryptedName","localStorage","getItem","console","log","pathname","setItem","storedUser","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/anegi/react/frontend/src/Component/Provider/UserProvider.js"],"sourcesContent":["// UserProvider.js\nimport { useState,useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport UserContext from \"../context/UserContext\";\nimport { Cookies } from 'react-cookie'; // ✅ CORRECT\n\n\nconst UserProvider = ({ children }) => {\n  const location = useLocation();\n  const [encryptedName, setEncryptedName] = useState(() => {\n    return localStorage.getItem(\"user\") || \"\";\n  });\n  \n  \n  // ✅ Load usernav from localStorage when the app first loads\n  // useEffect(() => {\n   \n  //   console.log(\"UserProvider loaded user from localStorage:\", storedUser);\n  //   if (storedUser) {\n     \n  //   }\n  // }, []);\n\n  // ✅ Sync usernav with localStorage when it changes\n  useEffect(() => {\n    console.log(\"path is:\", location.pathname);\n    if (encryptedName ) {\n      console.log(\"Storing user in localStorage chala:\", encryptedName);\n      localStorage.setItem(\"user\", encryptedName); \n      const storedUser = localStorage.getItem(\"user\");\n      if(storedUser){\n        setEncryptedName(storedUser);\n      } \n    } else {\n      console.log(\"removing user in localStorage chala:\", encryptedName);\n      localStorage.removeItem(\"user\");\n    }\n  }, [encryptedName]);\n\n  return (\n    <UserContext.Provider value={{ encryptedName, setEncryptedName }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserProvider;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,SAASC,OAAO,QAAQ,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IACvD,OAAOa,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE;EAC3C,CAAC,CAAC;;EAGF;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACAb,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEN,QAAQ,CAACO,QAAQ,CAAC;IAC1C,IAAIN,aAAa,EAAG;MAClBI,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEL,aAAa,CAAC;MACjEE,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEP,aAAa,CAAC;MAC3C,MAAMQ,UAAU,GAAGN,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC/C,IAAGK,UAAU,EAAC;QACZP,gBAAgB,CAACO,UAAU,CAAC;MAC9B;IACF,CAAC,MAAM;MACLJ,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEL,aAAa,CAAC;MAClEE,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IACjC;EACF,CAAC,EAAE,CAACT,aAAa,CAAC,CAAC;EAEnB,oBACEL,OAAA,CAACH,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEX,aAAa;MAAEC;IAAiB,CAAE;IAAAJ,QAAA,EAC9DA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjB,EAAA,CArCIF,YAAY;EAAA,QACCL,WAAW;AAAA;AAAAyB,EAAA,GADxBpB,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}