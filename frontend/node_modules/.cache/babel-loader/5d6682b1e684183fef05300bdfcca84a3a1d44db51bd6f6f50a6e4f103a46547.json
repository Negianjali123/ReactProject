{"ast":null,"code":"import CryptoJS from 'crypto-js';\nconst SECRET_KEY = process.env.REACT_APP_SECRET_KEY || '123456';\nexport const encryptData = data => {\n  // Ensure data is a string before encryption (e.g., JSON.stringify for objects)\n  const ciphertext = CryptoJS.AES.encrypt(JSON.stringify(data), SECRET_KEY).toString();\n  return ciphertext;\n};\nexport const decryptData = ciphertext => {\n  const bytes = CryptoJS.AES.decrypt(ciphertext, SECRET_KEY);\n  const decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  return decryptedData;\n};","map":{"version":3,"names":["CryptoJS","SECRET_KEY","process","env","REACT_APP_SECRET_KEY","encryptData","data","ciphertext","AES","encrypt","JSON","stringify","toString","decryptData","bytes","decrypt","decryptedData","parse","enc","Utf8"],"sources":["/home/anegi/react/frontend/src/utils/crypto.js"],"sourcesContent":["import CryptoJS from 'crypto-js';\nconst SECRET_KEY = process.env.REACT_APP_SECRET_KEY || '123456';\n\nexport  const encryptData = (data) => {\n    // Ensure data is a string before encryption (e.g., JSON.stringify for objects)\n    const ciphertext = CryptoJS.AES.encrypt(JSON.stringify(data), SECRET_KEY).toString();\n    return ciphertext;\n  };\n\nexport const decryptData = (ciphertext) => {\n    const bytes = CryptoJS.AES.decrypt(ciphertext, SECRET_KEY);\n    const decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n    return decryptedData;\n  };"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,WAAW;AAChC,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,QAAQ;AAE/D,OAAQ,MAAMC,WAAW,GAAIC,IAAI,IAAK;EAClC;EACA,MAAMC,UAAU,GAAGP,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAACC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,EAAEL,UAAU,CAAC,CAACW,QAAQ,CAAC,CAAC;EACpF,OAAOL,UAAU;AACnB,CAAC;AAEH,OAAO,MAAMM,WAAW,GAAIN,UAAU,IAAK;EACvC,MAAMO,KAAK,GAAGd,QAAQ,CAACQ,GAAG,CAACO,OAAO,CAACR,UAAU,EAAEN,UAAU,CAAC;EAC1D,MAAMe,aAAa,GAAGN,IAAI,CAACO,KAAK,CAACH,KAAK,CAACF,QAAQ,CAACZ,QAAQ,CAACkB,GAAG,CAACC,IAAI,CAAC,CAAC;EACnE,OAAOH,aAAa;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}